{"version":3,"sources":["redux/actions.js","redux/reduser.js","redux/store.js","Components/Form/Form.js","Components/Finder/Finder.js","Components/FormItem/FormItem.js","Components/FormList/FormList.js","App.js","index.js","Components/Form/Form.module.css"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContacts","items","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","devTools","process","persistor","persistStore","Form","onInputChange","event","setState","currentTarget","value","onInputTelChange","onFormSubmit","props","some","contact","alert","preventDefault","onSubmitProp","reset","this","inputId","onSubmit","className","styles","form","htmlFor","form_item","type","onChange","pattern","title","required","button","Component","connect","dispatch","e","FormItem","deleteItem","onClick","normalizedFilter","toLowerCase","includes","map","App","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.17fa569b.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('ADD_CONTACT', (name, number) => {\r\n    return {\r\n        payload: {\r\n            id: uuidv4(),\r\n            name,\r\n            number\r\n        }\r\n    }\r\n});\r\nconst deleteContact = createAction('DELETE_CONTACT');\r\nconst filterContacts = createAction('FITER_CONTACTS');\r\n\r\n// redux\r\n\r\n// const addContact = (name, number) => {\r\n//     return {\r\n//         type: 'ADD_CONTACT',\r\n//         payload: { id: uuidv4(), name, number }\r\n//     }\r\n// };\r\n// const deleteContact = (contactId) => {\r\n//     return {\r\n//         type: 'DELETE_CONTACT',\r\n//         payload: contactId\r\n//     }\r\n// };\r\n// const filterContacts = (filter) => {\r\n\r\n//     return {\r\n//         type: 'FITER_CONTACTS',\r\n//         payload: filter\r\n//     }\r\n// }\r\nexport default { addContact, deleteContact, filterContacts };","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\"\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload)\r\n\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.filterContacts]: (_, { payload }) => payload\r\n})\r\n// redux\r\n// const items = (state = [], { type, payload }) => {\r\n//     switch (type) {\r\n//         case 'ADD_CONTACT': return [...state, payload];\r\n//         case 'DELETE_CONTACT': console.log('state', state); return state.filter(({ id }) => id !== payload);\r\n\r\n//         default: return state;\r\n//     }\r\n// };\r\n// const filter = (state = '', { type, payload }) => {\r\n//     console.log(payload);\r\n//     switch (type) {\r\n//         case 'FITER_CONTACTS': return payload;\r\n//         default: return state;\r\n//     }\r\n// };\r\n\r\nexport default combineReducers({ items, filter });","// import { createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from 'redux-logger'\r\nimport {\r\n    persistStore, persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport reducer from \"./reduser\";\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }), logger,\r\n];\r\n\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\n// const store = createStore(reduser, composeWithDevTools());\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, reducer),\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development'\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/actions\"\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Form.module.css\";\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  reset() {\n    this.setState({ name: \"\", number: \"\" });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n  onInputTelChange = (event) => {\n    this.setState({ number: event.currentTarget.value });\n  };\n\n  onFormSubmit = (event) => {\n    const { name } = this.state;\n    const isAlreadyInContacts = this.props.contacts.some(\n      (contact) => contact.name === name\n    );\n    if (isAlreadyInContacts) {\n      alert(\"Контакт с таким именем уже есть\");\n      return;\n    }\n    event.preventDefault();\n    this.props.onSubmitProp(this.state.name, this.state.number);\n    this.reset();\n  };\n\n  render() {\n    const inputId = uuidv4();\n    return (\n      <form onSubmit={this.onFormSubmit} className={styles.form}>\n        <label htmlFor={inputId} className={styles.form_item}>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            id={inputId}\n            onChange={this.onInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={styles.form_item}>\n          Number:\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.onInputTelChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n};\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\nconst mapDispatchToProps = dispatch => ({\n  onSubmitProp: (name, number) => dispatch(actions.addContact(name, number))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\nForm.propTypes = {\n  onSubmitProp: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/actions\";\nconst Finder = ({ value, onChange }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"name\" value={value} onChange={onChange} />\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n\n  value: state.filter,\n});\nconst mapDispatchToProps = dispatch => ({ onChange: (e) => dispatch(actions.filterContacts(e.currentTarget.value)) });\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Finder);\nFinder.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\n\nconst FormItem = ({ name, id, number, deleteItem }) => {\n  return (\n    <>\n      <li key={id}>\n        <p>\n          {name}: {number}\n        </p>\n      </li>\n      <button type=\"button\" onClick={deleteItem}>\n        Delete\n      </button>\n    </>\n  );\n};\nexport default FormItem;\nFormItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"../FormItem/FormItem\";\nimport actions from \"../../redux/actions\"\nimport { connect } from \"react-redux\";\nconst FormList = ({ contacts, deleteItem }) => {\n  return (\n    <ul>\n      {contacts.map(({ name, id, number }) => (\n        <FormItem\n          name={name}\n          id={id}\n          number={number}\n          deleteItem={() => deleteItem(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { filter, items } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = items.filter(({ name }) => name.toLowerCase().includes(normalizedFilter))\n  return { contacts: visibleContacts }\n};\nconst mapDispatchToProps = dispatch => ({ deleteItem: id => dispatch(actions.deleteContact(id)) })\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormList);\nFormList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\n\nimport Form from \"./Components/Form/Form\";\nimport React, { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport Finder from \"./Components/Finder/Finder\";\nimport FormList from \"./Components/FormList/FormList\";\n\nclass App extends Component {\n  // state = {\n  //   contacts: [\n  //     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  //   ],\n  //   filter: \"\",\n  // };\n\n  // onSubmitHandler = (name, number) => {\n  //   const isAlreadyInContacts = this.state.contacts.some(\n  //     (contact) => contact.name === name\n  //   );\n  //   const item = {\n  //     name,\n  //     number,\n  //     id: uuidv4(),\n  //   };\n  //   if (isAlreadyInContacts) {\n  //     alert(\"вы что такое делаете\");\n  //     return;\n  //   }\n  //   this.setState((prevState) => ({ contacts: [item, ...prevState.contacts] }));\n  //   console.log(this.state.contacts);\n  // };\n\n  // onFilter = (e) => {\n  //   this.setState({ filter: e.currentTarget.value });\n  // };\n\n  // deleteItem = (contactId) => {\n  //   this.setState((prevState) => {\n  //     return {\n  //       contacts: prevState.contacts.filter(\n  //         (contact) => contact.id !== contactId\n  //       ),\n  //     };\n  //   });\n  // };\n\n  // add localStorage\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  // }\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(contacts);\n  //   if (parsedContacts) { this.setState({ contacts: parsedContacts }) }\n\n  // }\n\n  render() {\n    // const { contacts, filter } = this.state;\n    // const includingContacts = contacts.filter((contact) =>\n    //   contact.name.toLowerCase().includes(filter.toLowerCase())\n    // );\n    return (\n      <div className=\"App\">\n        <Form />\n        <Finder />\n        <FormList />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__OIEBG\",\"form_item\":\"Form_form_item__ziJE2\",\"button\":\"Form_button__5mgO9\"};"],"sourceRoot":""}